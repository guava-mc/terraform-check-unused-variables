name: CI

on:
  pull_request:
    branches:
      - main

jobs: 
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
        working-directory: ./

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - run: |
          git fetch --all --tags
          echo $?
          git tag --list

      - uses: paulhatch/semantic-version@v4.0.2
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}-prerelease${increment}"
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false

# python
      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
            python-version: 3.9.7
    
      - name: Install pip
        run: |
            python3 -m pip install --upgrade pip
            pip install -r requirements.txt



#- name: Lint with flake8
#run: |
#pip install flake8
#flake8

#- name: Coverage report
#working-directory: ./
#run: |
#pip install coverage
#coverage run manage.py test
#coverage report

#- name: Run tests
#working-directory: ./tests
#run: python3 

